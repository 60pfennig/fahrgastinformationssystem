//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.11.06 at 11:34:29 AM CET 
//


package org.railml.schemas._2009;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for tPosInTrack.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="tPosInTrack">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="center"/>
 *     &lt;enumeration value="leftRail"/>
 *     &lt;enumeration value="leftRailInside"/>
 *     &lt;enumeration value="leftRailOutside"/>
 *     &lt;enumeration value="rightRail"/>
 *     &lt;enumeration value="rightRailInside"/>
 *     &lt;enumeration value="rightRailOutside"/>
 *     &lt;enumeration value="outside"/>
 *     &lt;enumeration value="outsideLeft"/>
 *     &lt;enumeration value="outsideRight"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "tPosInTrack")
@XmlEnum
public enum TPosInTrack {

    @XmlEnumValue("center")
    CENTER("center"),
    @XmlEnumValue("leftRail")
    LEFT_RAIL("leftRail"),
    @XmlEnumValue("leftRailInside")
    LEFT_RAIL_INSIDE("leftRailInside"),
    @XmlEnumValue("leftRailOutside")
    LEFT_RAIL_OUTSIDE("leftRailOutside"),
    @XmlEnumValue("rightRail")
    RIGHT_RAIL("rightRail"),
    @XmlEnumValue("rightRailInside")
    RIGHT_RAIL_INSIDE("rightRailInside"),
    @XmlEnumValue("rightRailOutside")
    RIGHT_RAIL_OUTSIDE("rightRailOutside"),
    @XmlEnumValue("outside")
    OUTSIDE("outside"),
    @XmlEnumValue("outsideLeft")
    OUTSIDE_LEFT("outsideLeft"),
    @XmlEnumValue("outsideRight")
    OUTSIDE_RIGHT("outsideRight");
    private final String value;

    TPosInTrack(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static TPosInTrack fromValue(String v) {
        for (TPosInTrack c: TPosInTrack.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
