//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.11.06 at 11:34:29 AM CET 
//


package org.railml.schemas._2009;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for tTrainProtectionMedium.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="tTrainProtectionMedium">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="none"/>
 *     &lt;enumeration value="mechanical"/>
 *     &lt;enumeration value="inductive"/>
 *     &lt;enumeration value="magnetic"/>
 *     &lt;enumeration value="optical"/>
 *     &lt;enumeration value="radio"/>
 *     &lt;enumeration value="rail"/>
 *     &lt;enumeration value="cable"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "tTrainProtectionMedium")
@XmlEnum
public enum TTrainProtectionMedium {

    @XmlEnumValue("none")
    NONE("none"),
    @XmlEnumValue("mechanical")
    MECHANICAL("mechanical"),
    @XmlEnumValue("inductive")
    INDUCTIVE("inductive"),
    @XmlEnumValue("magnetic")
    MAGNETIC("magnetic"),
    @XmlEnumValue("optical")
    OPTICAL("optical"),
    @XmlEnumValue("radio")
    RADIO("radio"),
    @XmlEnumValue("rail")
    RAIL("rail"),
    @XmlEnumValue("cable")
    CABLE("cable");
    private final String value;

    TTrainProtectionMedium(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static TTrainProtectionMedium fromValue(String v) {
        for (TTrainProtectionMedium c: TTrainProtectionMedium.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
